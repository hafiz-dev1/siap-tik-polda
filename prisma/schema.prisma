generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pengguna {
  id                String        @id @default(uuid())
  nama              String
  username          String        @unique
  password          String
  role              Role          @default(ADMIN)
  profilePictureUrl String?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  nrp_nip           String?
  deletedAt         DateTime?
  activityLogs      ActivityLog[]
  surat             Surat[]

  @@map("pengguna")
}

model Surat {
  id                      String      @id @default(uuid())
  nomor_agenda            String?     @unique
  nomor_surat             String
  tanggal_surat           DateTime
  tanggal_diterima_dibuat DateTime?
  perihal                 String
  asal_surat              String
  tujuan_surat            String
  arah_surat              ArahSurat
  tipe_dokumen            TipeDokumen
  tujuan_disposisi        String[]
  isi_disposisi           String
  id_operator             String
  deletedAt               DateTime?
  createdAt               DateTime    @default(now())
  updatedAt               DateTime    @updatedAt
  lampiran                Lampiran[]
  operator                Pengguna    @relation(fields: [id_operator], references: [id])

  @@unique([nomor_surat, tanggal_surat], name: "unique_nomor_tanggal")
  @@map("surat")
}

model Lampiran {
  id          String   @id @default(uuid())
  nama_file   String
  path_file   String
  tipe_file   String
  ukuran_file Int
  id_surat    String
  uploaded_at DateTime @default(now())
  surat       Surat    @relation(fields: [id_surat], references: [id], onDelete: Cascade)

  @@map("lampiran")
}

model ActivityLog {
  id           String    @id @default(uuid())
  userId       String
  category     String
  type         String
  description  String
  entityType   String?
  entityId     String?
  metadata     Json?
  ipAddress    String?
  userAgent    String?
  status       String    @default("SUCCESS")
  createdAt    DateTime  @default(now())
  user         Pengguna  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([createdAt])
  @@index([category])
  @@index([type])
  @@index([entityType])
  @@index([status])
  @@map("activity_log")
}

enum ArahSurat {
  MASUK
  KELUAR
}

enum TipeDokumen {
  NOTA_DINAS
  SURAT_BIASA
  SPRIN
  TELEGRAM
}

enum Role {
  SUPER_ADMIN
  ADMIN
}

enum ActivityType {
  LOGIN
  LOGOUT
  CREATE_SURAT
  UPDATE_SURAT
  DELETE_SURAT
  RESTORE_SURAT
  PERMANENT_DELETE_SURAT
  BULK_DELETE_SURAT
  BULK_RESTORE_SURAT
  BULK_PERMANENT_DELETE_SURAT
  CREATE_USER
  UPDATE_USER
  DELETE_USER
  RESTORE_USER
  PERMANENT_DELETE_USER
  BULK_RESTORE_USERS
  BULK_PERMANENT_DELETE_USERS
  UPDATE_PROFILE
  CHANGE_PASSWORD
  UPLOAD_PROFILE_PICTURE
  UPLOAD_FILE
  DELETE_FILE
  PURGE_EXPIRED_TRASH
}
