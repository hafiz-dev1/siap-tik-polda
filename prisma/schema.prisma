// file: prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enum untuk Arah Surat (Masuk/Keluar)
enum ArahSurat {
  MASUK
  KELUAR
}

// Enum untuk Tipe Dokumen
enum TipeDokumen {
  NOTA_DINAS
  SURAT_BIASA
  SPRIN
  TELEGRAM
}

// Model untuk pengguna yang bisa login (admin/operator)
model Operator {
  id        String   @id @default(uuid())
  username  String   @unique
  password  String
  surat     Surat[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("operator")
}

// Model utama untuk data surat
model Surat {
  id                      String     @id @default(uuid())
  nomor_agenda            String     @unique // Field baru untuk Nomor Agenda
  nomor_surat             String     @unique
  tanggal_surat           DateTime
  tanggal_diterima_dibuat DateTime   // Field yang dimodifikasi, bisa diisi manual
  perihal                 String     @db.Text
  asal_surat              String
  tujuan_surat            String
  arah_surat              ArahSurat
  tipe_dokumen            TipeDokumen
  tujuan_disposisi        String[]   // Diubah menjadi array String untuk multi-pilih
  isi_disposisi           String     @db.Text
  id_operator             String
  operator                Operator   @relation(fields: [id_operator], references: [id])
  lampiran                Lampiran[]
  deletedAt               DateTime?  // Untuk soft delete
  createdAt               DateTime   @default(now())
  updatedAt               DateTime   @updatedAt

  @@map("surat")
}

// Model untuk menyimpan file lampiran yang di-upload
model Lampiran {
  id          String   @id @default(uuid())
  nama_file   String
  path_file   String
  tipe_file   String
  ukuran_file Int
  id_surat    String
  surat       Surat    @relation(fields: [id_surat], references: [id], onDelete: Cascade)
  uploaded_at DateTime @default(now())

  @@map("lampiran")
}